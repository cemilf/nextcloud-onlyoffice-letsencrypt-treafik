version: "3.6"

volumes:
  nextcloud:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /var/docker/nextcloud/data
  postgres:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /var/docker/nextcloud/db
  elasticsearch:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /var/docker/nextcloud/es

networks:
  nextcloud-network:
    name: nextcloud-network

# Reusable shared config
x-nc-shared: &nc-shared
  networks:
    - nextcloud-network
  # After 10 restarts don't try it again, otherwise it could affect other services on the host machine by restarting infinitely
  restart: on-failure:10
  # Limit the logging files to 10 with 100mb each, otherwise there is no limit until the disk is full
  logging:
    driver: "json-file"
    options:
      max-size: "100mb"
      max-file: "10"

services:
  clamavd:
    image: dinkel/clamavd
    container_name: clamavd
    labels:
      - traefik.enable=false
    <<: *nc-shared

  # Database used for OnlyOffice Document Server and Nextcloud itself
  postgres:
    build:
      context: ./postgres
    container_name: postgres
    volumes:
      - postgres:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - ./env_files/postgres.env
    # Don't make it reachable outside of docker for security reasons
    labels:
      - traefik.enable=false
    <<: *nc-shared

  # Redis for caching with Nextcloud (This is optional)
  nc-redis:
    image: redis:6.0.10-alpine
    container_name: nc-redis
    # Don't make it reachable outside of docker for security reasons
    labels:
      - traefik.enable=false
    <<: *nc-shared

  nc-elasticsearch:
    image: elasticsearch:7.10.1
    container_name: nc-elasticsearch
    # Don't make it reachable outside of docker for security reasons
    labels:
      - traefik.enable=false
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    <<: *nc-shared

  nextcloud-app:
    build:
      context: ./nextcloud
    #image: nextcloud:20.0.6-apache
    #image: nextcloud:21-beta
    container_name: nextcloud-app
    depends_on:
      - postgres
      - nc-redis
      - nc-elasticsearch
      - clamavd
    volumes:
      - nextcloud:/var/www/html
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - ./env_files/postgres.env
      - ./env_files/nextcloud.env
    labels:
      - traefik.docker.network=nextcloud-network
      - traefik.frontend.rule=Host:${NEXTCLOUD_DOMAIN}
      - traefik.port=80
      - traefik.enable=true

      # Set WebDav redirects
      - traefik.frontend.redirect.permanent='true'
      - traefik.frontend.redirect.regex=https://(.*)/.well-known/(card|cal)dav
      - traefik.frontend.redirect.replacement=https://$$1/remote.php/dav/

      # Set "Strict-Transport-Security" HTTP header for enhanced security
      - traefik.frontend.headers.stsSeconds=15552000
      - traefik.frontend.headers.stsIncludeSubdomains='true'


      - "traefik.http.middlewares.sts_headers.headers.stsSeconds=15552000"
      - "traefik.http.middlewares.sts_headers.headers.stsIncludeSubdomains=True"

      - "traefik.http.middlewares.nextcloud-caldav.redirectregex.permanent=true"
      - "traefik.http.middlewares.nextcloud-caldav.redirectregex.regex=^https://(.*)/.well-known/(card|cal)dav"
      - "traefik.http.middlewares.nextcloud-caldav.redirectregex.replacement=https://$${1}/remote.php/dav/"
      - "traefik.http.middlewares.nextcloud-https.redirectscheme.scheme=https"
      - "traefik.http.routers.nextcloud.middlewares=nextcloud-caldav,sts_headers"
      - "traefik.http.routers.nextcloud.tls=true"
      - "traefik.http.routers.nextcloud.tls.certresolver=default"
    <<: *nc-shared

  # Traefik for routing
  router:
    image: traefik:1.7.26-alpine
    container_name: router
    command: --api --docker
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/traefik.toml:/traefik.toml
      - ./traefik/acme.json:/acme.json
    labels:
      - traefik.enable=false
    <<: *nc-shared
